name: Build and Deploy to Cloud Run

on:
    pull_request:
        types: [synchronize, opened, reopened, closed]

env:
    PROJECT: floatcast-dev
    HOSTNAME: asia-northeast1-docker.pkg.dev
    REGION: asia-northeast1
    SERVICE: preview-${{ github.event.number }}
    GCP_SA_KEY_DEV: ${{ secrets.GCP_SA_KEY_DEV }}

jobs:
    setup-build-publish-deploy:
        name: Setup, Build, Publish and Deploy
        if: github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'synchronize'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            
            - name: ls
              run: ls -al


            - name: ls
              run: ls ./api -al

            - run: |
                gcloud config set project ${{env.PROJECT}}
                gcloud config set run/platform managed
                gcloud config set run/region ${{env.REGION}}
                gcloud auth configure-docker --quiet

            - name: auth cloud SDK
              uses: google-github-actions/auth@v0.4.0
              with:
                credentials_json: ${{ secrets.GCP_SA_KEY_DEV }}

            - name: Set up Cloud SDK
              uses: google-github-actions/setup-gcloud@v2
              with:
                service_account_key: ${{env.GCP_SA_KEY_DEV}}
                project_id: ${{env.PROJECT}}
                export_default_credentials: true
           
            - name: Build
              run: |
                docker build -t ${{env.PROJECT}}-api-${{env.SERVICE}}:${GITHUB_SHA:0:8} ./api

            - name: Tag
              run: |
                docker tag ${{env.PROJECT}}-api-${{env.SERVICE}}:${GITHUB_SHA:0:8} ${{env.HOSTNAME}}/${{env.PROJECT}}/${{env.PROJECT}}-api-${{env.SERVICE}}:${GITHUB_SHA:0:8}
            
            - name: Publish
              run: |
                docker push ${{env.HOSTNAME}}/${{env.PROJECT}}-api-${{env.SERVICE}}:${GITHUB_SHA:0:8}
            
            - name: Deploy
              run: |
                gcloud run deploy api-${{env.SERVICE}} \
                    --image ${{env.HOSTNAME}}/${{env.PROJECT}}-api-${{env.SERVICE}}:${GITHUB_SHA:0:8}
                PREVIEW_URL=$(gcloud run services describe api-${{env.SERVICE}} --format 'value(status.url)')
                gcloud run services update api-${{env.SERVICE}} --set-env-vars BASE_URL=${PREVIEW_URL}

            - name: Notify
              run: |
                PREVIEW_URL=$(gcloud run services describe api-${{env.SERVICE}} --format 'value(status.url)')
                gh pr comment -F ./comments "Preview URL: ${PREVIEW_URL}"